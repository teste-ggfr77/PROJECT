<%- include('partials/header') %>
<link rel="stylesheet" href="/css/cart.css">

<div class="cart-page">
    <div class="cart-header">
        <h1 class="cart-title"><%= __('cart.title') %></h1>
    </div>
    
    <% if (messages.error && messages.error.length > 0) { %>
        <div class="flash-message flash-error"><%= messages.error %></div>
    <% } %>
    <% if (messages.success && messages.success.length > 0) { %>
        <div class="flash-message flash-success"><%= messages.success %></div>
    <% } %>

    <% if (!products || products.length === 0) { %>
        <div class="cart-empty">
            <p class="cart-empty-message"><%= __('cart.empty') %></p>
            <a href="/products" class="checkout-btn"><%= __('cart.start_shopping') %></a>
        </div>
    <% } else { %>
        <div class="cart-items-container">
             <% products.forEach(p => { %>
                <div class="cart-item-card">
                    <div class="cart-item-image-wrapper">
                        <img src="<%= p.image || 'https://via.placeholder.com/400x400/f8f8f8/000000?text=No+Image' %>" alt="<%= p.name %>" class="product-photo">
                    </div>
                    <div class="cart-item-details">
                        <h3 class="product-name"><%= p.name %></h3>
                        
                        <div class="product-meta">
                            <div class="product-spec">
                                <strong><%= __('products.color') %>:</strong> <%= p.color %>
                            </div>
                            <% if (p.size) { %>
                                <div class="product-spec">
                                    <strong><%= __('products.size') %>:</strong> <%= p.size %>
                                </div>
                            <% } %>
                        </div>

                        <div class="product-pricing">
                            <div class="unit-price">
                                <strong><%= __('common.price') %>:</strong> <%= p.price.toLocaleString() %> <%= __('common.currency').toUpperCase() %>
                            </div>
                            <div class="total-price">
                                <strong><%= __('common.total') %>:</strong> <%= (p.price * p.qty).toLocaleString() %> <%= __('common.currency').toUpperCase() %>
                            </div>
                        </div>

                        <div class="cart-actions">
                            <div class="quantity-control">
                                <button class="qty-btn" onclick="updateQuantity('<%= p.id %>', -1)">-</button>
                                <span class="qty-display"><%= p.qty %></span>
                                <button class="qty-btn" onclick="updateQuantity('<%= p.id %>', 1)">+</button>
                            </div>
                            <button class="remove-btn" onclick="removeItem('<%= p.id %>')" title="<%= __('cart.remove_item') %>">
                                <svg viewBox="0 0 24 24" width="20" height="20" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>
                                <span><%= __('common.remove') %></span>
                            </button>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>

        <div class="cart-summary">
            <div class="summary-title"><%= __('cart.cart_summary') %></div>
            <div class="summary-row">
                <span><%= __('common.subtotal') %></span>
                <span><%= subtotal.toLocaleString() %> <%= __('common.currency').toUpperCase() %></span>
            </div>
            <% if (discount > 0) { %>
                <div class="summary-row">
                    <span><%= __('common.discount') %></span>
                    <span>-<%= discount.toLocaleString() %> <%= __('common.currency').toUpperCase() %></span>
                </div>
            <% } %>
            <div class="summary-row">
                <span><%= __('common.shipping') %></span>
                <span><%= __('common.free') %></span>
            </div>
            <div class="summary-row total">
                <span><%= __('common.total') %></span>
                <span><%= total.toLocaleString() %> <%= __('common.currency').toUpperCase() %></span>
            </div>

            <form action="/cart/apply-promo" method="POST" class="promo-form">
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                <input type="text" name="promoCode" class="promo-input" placeholder="<%= __('cart.promo_code') %>" value="<%= promo?.code || '' %>">
                <button type="submit" class="promo-submit"><%= __('cart.apply_promo') %></button>
            </form>

            <!-- Size Guide Section -->
            <div class="size-guide-section">
                <div class="size-guide-header">
                    <svg class="size-guide-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                        <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    <span><%= __('products.find_perfect_fit') %>?</span>
                </div>
                <div class="size-guide-links">
                    <a href="/size-guide" class="size-guide-link" target="_blank">
                        <svg class="link-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                        <%= __('products.size_guide') %>
                    </a>
                    <a href="/fit-guarantee" class="size-guide-link" target="_blank">
                        <svg class="link-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                        </svg>
                        <%= __('footer.fit_guarantee') %>
                    </a>
                </div>
            </div>

            <a href="/cart/checkout" class="checkout-btn"><%= __('cart.proceed_to_checkout') %></a>
            <a href="/products" class="continue-shopping"><%= __('cart.continue_shopping') %></a>
        </div>
    <% } %>
</div>

<script>
async function updateQuantity(productId, change) {
    try {
        const btn = event.target;
        const originalText = btn.textContent;
        btn.disabled = true;
        btn.textContent = '...';
        
        const response = await fetch(`/cart/update/${productId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'CSRF-Token': '<%= csrfToken %>'
            },
            body: JSON.stringify({ change })
        });

        const data = await response.json();
        
        if (!response.ok) {
            throw new Error(data.error || 'Failed to update quantity');
        }

        // Show success notification
        showNotification('Cart updated successfully!', 'success');
        
        // Reload page after short delay
        setTimeout(() => {
            window.location.reload();
        }, 500);
        
    } catch (error) {
        showNotification(error.message, 'error');
        btn.disabled = false;
        btn.textContent = originalText;
    }
}

async function removeItem(productId) {
    try {
        if (!confirm('Are you sure you want to remove this item from your cart?')) {
            return;
        }

        const btn = event.target;
        btn.disabled = true;
        btn.textContent = '...';

        const response = await fetch(`/cart/remove/${productId}`, {
            method: 'POST',
            headers: {
                'CSRF-Token': '<%= csrfToken %>'
            }
        });

        const data = await response.json();
        
        if (!response.ok) {
            throw new Error(data.error || 'Failed to remove item');
        }

        // Show success notification
        showNotification('Item removed from cart!', 'success');
        
        // Reload page after short delay
        setTimeout(() => {
            window.location.reload();
        }, 500);
        
    } catch (error) {
        showNotification(error.message, 'error');
        btn.disabled = false;
        btn.textContent = '√ó';
    }
}

function showNotification(message, type) {
    // Create enhanced notification element
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    
    // Enhanced notification content with icons
    const icons = {
        success: '‚úÖ',
        error: '‚ùå',
        info: '‚ÑπÔ∏è'
    };
    
    notification.innerHTML = `
        <div class="notification-content">
            <div class="notification-icon">${icons[type] || 'üì¢'}</div>
            <span class="notification-message">${message}</span>
            <button class="notification-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
        </div>
        <div class="notification-progress"></div>
    `;
    
    // Enhanced styles with gradients and animations
    const colors = {
        success: 'linear-gradient(135deg, #000 0%, #333 100%)',
        error: 'linear-gradient(135deg, #ff4757 0%, #ff3838 100%)',
        info: 'linear-gradient(135deg, #3742fa 0%, #2f3542 100%)'
    };
    
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${colors[type] || colors.info};
        color: white;
        padding: 0;
        border-radius: 12px;
        z-index: 10000;
        font-weight: 600;
        box-shadow: 0 8px 32px rgba(0,0,0,0.3);
        animation: slideInRight 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        overflow: hidden;
        min-width: 300px;
        backdrop-filter: blur(10px);
    `;
    
    const content = notification.querySelector('.notification-content');
    content.style.cssText = `
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 16px 20px;
        position: relative;
    `;
    
    const icon = notification.querySelector('.notification-icon');
    icon.style.cssText = `
        font-size: 20px;
        animation: iconBounce 0.6s ease-out;
    `;
    
    const message_el = notification.querySelector('.notification-message');
    message_el.style.cssText = `
        flex: 1;
        font-size: 14px;
        line-height: 1.4;
    `;
    
    const button = notification.querySelector('.notification-close');
    button.style.cssText = `
        background: rgba(255,255,255,0.2);
        border: none;
        color: white;
        font-size: 18px;
        cursor: pointer;
        padding: 4px 8px;
        border-radius: 50%;
        width: 28px;
        height: 28px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        font-weight: bold;
    `;
    
    button.addEventListener('mouseenter', () => {
        button.style.background = 'rgba(255,255,255,0.3)';
        button.style.transform = 'scale(1.1)';
    });
    
    button.addEventListener('mouseleave', () => {
        button.style.background = 'rgba(255,255,255,0.2)';
        button.style.transform = 'scale(1)';
    });
    
    const progress = notification.querySelector('.notification-progress');
    progress.style.cssText = `
        position: absolute;
        bottom: 0;
        left: 0;
        height: 3px;
        background: rgba(255,255,255,0.3);
        animation: progressBar 4s linear;
        transform-origin: left;
    `;
    
    // Add enhanced animation styles
    if (!document.querySelector('#cart-notification-styles')) {
        const style = document.createElement('style');
        style.id = 'cart-notification-styles';
        style.textContent = `
            @keyframes slideInRight {
                from { 
                    transform: translateX(100%) scale(0.8); 
                    opacity: 0; 
                }
                to { 
                    transform: translateX(0) scale(1); 
                    opacity: 1; 
                }
            }
            
            @keyframes iconBounce {
                0%, 100% { transform: scale(1); }
                25% { transform: scale(1.2); }
                50% { transform: scale(0.9); }
                75% { transform: scale(1.1); }
            }
            
            @keyframes progressBar {
                from { transform: scaleX(1); }
                to { transform: scaleX(0); }
            }
        `;
        document.head.appendChild(style);
    }
    
    document.body.appendChild(notification);
    
    // Auto remove after 4 seconds with fade out
    setTimeout(() => {
        if (notification.parentElement) {
            notification.style.animation = 'slideInRight 0.3s ease-out reverse';
            setTimeout(() => {
                if (notification.parentElement) {
                    notification.remove();
                }
            }, 300);
        }
    }, 4000);
}

// Disable submit button on promo form submit to prevent double submission
document.querySelector('.promo-form')?.addEventListener('submit', function(e) {
    const submitBtn = this.querySelector('button[type="submit"]');
    if (submitBtn) {
        submitBtn.disabled = true;
        submitBtn.textContent = 'Applying...';
    }
});

// Add loading states to checkout button
document.querySelector('.checkout-btn')?.addEventListener('click', function(e) {
    this.style.opacity = '0.7';
    this.textContent = 'Loading...';
});
</script>

<%- include('partials/footer') %>