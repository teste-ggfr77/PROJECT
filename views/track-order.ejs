<%- include('partials/header') %>

<style>
    body {
        margin: 0;
        padding: 0;
        font-family: 'Helvetica Neue', Arial, sans-serif;
        background-color: #f8f9fa;
        padding-top: 80px;
    }

    .track-hero {
        position: relative;
        height: 40vh;
        background: linear-gradient(135deg, #1f2937 0%, #374151 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    .track-hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="track-pattern" width="20" height="20" patternUnits="userSpaceOnUse"><path d="M10,0 L20,10 L10,20 L0,10 Z" fill="rgba(255,255,255,0.05)"/></pattern></defs><rect width="100" height="100" fill="url(%23track-pattern)"/></svg>');
        opacity: 0.3;
    }

    .track-hero-content {
        position: relative;
        z-index: 2;
        text-align: center;
        color: white;
        max-width: 600px;
        padding: 0 2rem;
    }

    .track-hero-title {
        font-size: clamp(2.5rem, 6vw, 4rem);
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.1em;
        margin-bottom: 1rem;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }

    .track-hero-subtitle {
        font-size: clamp(1rem, 2vw, 1.25rem);
        font-weight: 400;
        letter-spacing: 0.05em;
        opacity: 0.9;
    }

    .track-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 3rem 2rem;
    }

    .track-form-section {
        background: #ffffff;
        border-radius: 12px;
        padding: 2.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: 1px solid #e5e7eb;
    }

    .form-header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .form-header h2 {
        font-size: 1.75rem;
        font-weight: 700;
        color: #111827;
        margin-bottom: 0.5rem;
    }

    .form-header p {
        color: #6b7280;
        font-size: 1rem;
        line-height: 1.6;
    }

    .track-form {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .track-input {
        flex: 1;
        padding: 1rem;
        border: 2px solid #d1d5db;
        border-radius: 8px;
        font-size: 1rem;
        background: #ffffff;
        color: #111827;
        transition: border-color 0.2s ease, box-shadow 0.2s ease;
    }

    .track-input:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }

    .track-input::placeholder {
        color: #9ca3af;
    }

    .track-btn {
        background: #3b82f6;
        color: white;
        padding: 1rem 2rem;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.2s ease;
        white-space: nowrap;
    }

    .track-btn:hover {
        background: #2563eb;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .track-btn:disabled {
        background: #9ca3af;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }

    .loading {
        display: none;
        text-align: center;
        padding: 2rem;
        color: #6b7280;
    }

    .loading.show {
        display: block;
    }

    .spinner {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 2px solid #f3f4f6;
        border-top: 2px solid #3b82f6;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-right: 0.5rem;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .order-result {
        display: none;
        background: #ffffff;
        border-radius: 12px;
        padding: 2.5rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: 1px solid #e5e7eb;
    }

    .order-result.show {
        display: block;
    }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 2rem;
        padding-bottom: 1.5rem;
        border-bottom: 2px solid #f3f4f6;
    }

    .order-info h3 {
        font-size: 1.5rem;
        font-weight: 700;
        color: #111827;
        margin-bottom: 0.5rem;
    }

    .order-meta {
        color: #6b7280;
        font-size: 0.9rem;
    }

    .order-status {
        text-align: right;
    }

    .status-badge {
        display: inline-block;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .status-processing {
        background: #fef3c7;
        color: #92400e;
    }

    .status-shipped {
        background: #dbeafe;
        color: #1e40af;
    }

    .status-delivered {
        background: #d1fae5;
        color: #065f46;
    }

    .status-cancelled {
        background: #fee2e2;
        color: #991b1b;
    }

    .tracking-timeline {
        margin: 2rem 0;
    }

    .timeline-item {
        display: flex;
        align-items: flex-start;
        margin-bottom: 1.5rem;
        position: relative;
    }

    .timeline-item:not(:last-child)::after {
        content: '';
        position: absolute;
        left: 1rem;
        top: 2.5rem;
        width: 2px;
        height: calc(100% + 0.5rem);
        background: #e5e7eb;
    }

    .timeline-icon {
        width: 2rem;
        height: 2rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        flex-shrink: 0;
        position: relative;
        z-index: 1;
    }

    .timeline-icon.completed {
        background: #10b981;
        color: white;
    }

    .timeline-icon.current {
        background: #3b82f6;
        color: white;
    }

    .timeline-icon.pending {
        background: #e5e7eb;
        color: #9ca3af;
    }

    .timeline-content h4 {
        font-weight: 600;
        color: #111827;
        margin-bottom: 0.25rem;
    }

    .timeline-content p {
        color: #6b7280;
        font-size: 0.9rem;
        margin-bottom: 0.25rem;
    }

    .timeline-date {
        color: #9ca3af;
        font-size: 0.8rem;
    }

    .order-items {
        margin-top: 2rem;
        padding-top: 2rem;
        border-top: 2px solid #f3f4f6;
    }

    .order-items h4 {
        font-size: 1.25rem;
        font-weight: 600;
        color: #111827;
        margin-bottom: 1rem;
    }

    .item {
        display: flex;
        align-items: center;
        padding: 1rem;
        background: #f9fafb;
        border-radius: 8px;
        margin-bottom: 0.75rem;
    }

    .item-image {
        width: 60px;
        height: 60px;
        background: #e5e7eb;
        border-radius: 6px;
        margin-right: 1rem;
        flex-shrink: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #9ca3af;
    }

    .item-details {
        flex: 1;
    }

    .item-name {
        font-weight: 600;
        color: #111827;
        margin-bottom: 0.25rem;
    }

    .item-meta {
        color: #6b7280;
        font-size: 0.9rem;
    }

    .item-price {
        font-weight: 600;
        color: #111827;
        text-align: right;
    }

    .error-message {
        display: none;
        background: #fee2e2;
        border: 1px solid #fecaca;
        color: #991b1b;
        padding: 1rem;
        border-radius: 8px;
        margin-top: 1rem;
        text-align: center;
    }

    .error-message.show {
        display: block;
    }

    .sample-orders {
        background: #f0f9ff;
        border: 1px solid #bae6fd;
        border-radius: 8px;
        padding: 1rem;
        margin-top: 1rem;
    }

    .sample-orders h5 {
        font-size: 0.9rem;
        font-weight: 600;
        color: #0369a1;
        margin-bottom: 0.5rem;
    }

    .sample-orders p {
        font-size: 0.8rem;
        color: #0369a1;
        margin: 0;
    }

    /* Responsive Design */
    @media (max-width: 640px) {
        .track-container {
            padding: 2rem 1rem;
        }

        .track-form-section,
        .order-result {
            padding: 1.5rem;
        }

        .track-form {
            flex-direction: column;
        }

        .order-header {
            flex-direction: column;
            gap: 1rem;
        }

        .order-status {
            text-align: left;
        }

        .item {
            flex-direction: column;
            text-align: center;
        }

        .item-image {
            margin-right: 0;
            margin-bottom: 0.5rem;
        }
    }
</style>

<main>
    <!-- Hero Section -->
    <section class="track-hero">
        <div class="track-hero-content">
            <h1 class="track-hero-title">Track Your Order</h1>
            <p class="track-hero-subtitle">Enter your order ID to get real-time updates on your PROJECT gear</p>
        </div>
    </section>

    <!-- Track Order Section -->
    <section class="track-container">
        <!-- Search Form -->
        <div class="track-form-section">
            <div class="form-header">
                <h2>Find Your Order</h2>
                <p>Enter your order ID below to track your shipment and view order details</p>
            </div>

            <form class="track-form" id="trackForm">
                <input 
                    type="text" 
                    class="track-input" 
                    id="orderIdInput"
                    placeholder="Enter Order ID (e.g., ORD-2024-001234)"
                    required
                >
                <button type="submit" class="track-btn" id="trackBtn">
                    Track Order
                </button>
            </form>

            <div class="loading" id="loading">
                <div class="spinner"></div>
                Searching for your order...
            </div>

            <div class="error-message" id="errorMessage">
                Order not found. Please check your order ID and try again.
            </div>

            <div class="sample-orders">
                <h5>Order ID Format:</h5>
                <p>Enter your full order ID (e.g., ORD-2024-ABC123) or just the last 6 characters (e.g., ABC123)</p>
            </div>
        </div>

        <!-- Order Result -->
        <div class="order-result" id="orderResult">
            <div class="order-header">
                <div class="order-info">
                    <h3 id="orderTitle">Order #ORD-2024-001234</h3>
                    <div class="order-meta">
                        <p>Placed on <span id="orderDate">March 15, 2024</span></p>
                        <p>Total: <span id="orderTotal">$156.99</span></p>
                    </div>
                </div>
                <div class="order-status">
                    <div class="status-badge" id="statusBadge">Shipped</div>
                    <p style="margin-top: 0.5rem; font-size: 0.9rem; color: #6b7280;">
                        Estimated delivery: <span id="estimatedDelivery">March 20, 2024</span>
                    </p>
                </div>
            </div>

            <!-- Tracking Timeline -->
            <div class="tracking-timeline" id="trackingTimeline">
                <!-- Timeline items will be inserted here -->
            </div>

            <!-- Order Items -->
            <div class="order-items">
                <h4>Order Items</h4>
                <div id="orderItemsList">
                    <!-- Order items will be inserted here -->
                </div>
            </div>
        </div>
    </section>
</main>

<script>
// Form handling
document.getElementById('trackForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const orderIdInput = document.getElementById('orderIdInput');
    const orderId = orderIdInput.value.trim().toUpperCase();
    
    if (!orderId) {
        showError('Please enter an order ID');
        return;
    }
    
    trackOrder(orderId);
});

function trackOrder(orderId) {
    const loading = document.getElementById('loading');
    const errorMessage = document.getElementById('errorMessage');
    const orderResult = document.getElementById('orderResult');
    const trackBtn = document.getElementById('trackBtn');
    
    // Hide previous results
    errorMessage.classList.remove('show');
    orderResult.classList.remove('show');
    
    // Show loading
    loading.classList.add('show');
    trackBtn.disabled = true;
    
    // Clean the order ID - remove any non-alphanumeric characters except hyphens
    const cleanOrderId = orderId.replace(/[^A-Z0-9-]/g, '');
    
    // Make API call to track order
    fetch(`/api/track-order/${cleanOrderId}`)
        .then(response => response.json())
        .then(data => {
            loading.classList.remove('show');
            trackBtn.disabled = false;
            
            if (data.success && data.order) {
                displayOrder(data.order);
            } else {
                showError(data.message || 'Order not found. Please check your order ID and try again.');
            }
        })
        .catch(error => {
            console.error('Error tracking order:', error);
            loading.classList.remove('show');
            trackBtn.disabled = false;
            showError('An error occurred while tracking your order. Please try again.');
        });
}

function displayOrder(order) {
    // Update order header
    document.getElementById('orderTitle').textContent = `Order #${order.id}`;
    document.getElementById('orderDate').textContent = order.date;
    document.getElementById('orderTotal').textContent = order.total;
    document.getElementById('estimatedDelivery').textContent = order.estimatedDelivery;
    
    // Update status badge
    const statusBadge = document.getElementById('statusBadge');
    statusBadge.textContent = order.status.charAt(0).toUpperCase() + order.status.slice(1);
    statusBadge.className = `status-badge status-${order.status}`;
    
    // Update timeline
    const timeline = document.getElementById('trackingTimeline');
    timeline.innerHTML = '';
    
    order.timeline.forEach(item => {
        const timelineItem = document.createElement('div');
        timelineItem.className = 'timeline-item';
        timelineItem.innerHTML = `
            <div class="timeline-icon ${item.status}">
                <i class="fas fa-${getTimelineIcon(item.status)}"></i>
            </div>
            <div class="timeline-content">
                <h4>${item.title}</h4>
                <p>${item.description}</p>
                <div class="timeline-date">${item.date}</div>
            </div>
        `;
        timeline.appendChild(timelineItem);
    });
    
    // Update order items
    const itemsList = document.getElementById('orderItemsList');
    itemsList.innerHTML = '';
    
    order.items.forEach(item => {
        const itemElement = document.createElement('div');
        itemElement.className = 'item';
        itemElement.innerHTML = `
            <div class="item-image">
                <i class="fas fa-tshirt"></i>
            </div>
            <div class="item-details">
                <div class="item-name">${item.name}</div>
                <div class="item-meta">Size: ${item.size} • Color: ${item.color} • Qty: ${item.quantity}</div>
            </div>
            <div class="item-price">${item.price}</div>
        `;
        itemsList.appendChild(itemElement);
    });
    
    // Show order result
    document.getElementById('orderResult').classList.add('show');
}

function getTimelineIcon(status) {
    switch(status) {
        case 'completed': return 'check';
        case 'current': return 'truck';
        case 'pending': return 'clock';
        default: return 'circle';
    }
}

function showError(message) {
    const errorMessage = document.getElementById('errorMessage');
    errorMessage.textContent = message;
    errorMessage.classList.add('show');
}

// Auto-focus on input when page loads
document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('orderIdInput').focus();
});
</script>

<%- include('partials/footer') %>
