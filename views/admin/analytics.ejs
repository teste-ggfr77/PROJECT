<!DOCTYPE html>
<html>
<head>
    <title>Analytics Dashboard</title>    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .gradient-header {
            background: linear-gradient(to right, #6d28d9, #4c1d95);
            color: white;
            padding: 2rem;
            border-radius: 10px;
            margin-bottom: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .card {
            border: none;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            border-radius: 10px;
            margin-bottom: 1rem;
            overflow: hidden;
        }
        .metric-card {
            transition: all 0.3s ease;
            border: none;
            position: relative;
        }
        .metric-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }
        .metric-purple {
            background: linear-gradient(135deg, #6d28d9, #7c3aed);
            color: white;
        }
        .metric-purple-light {
            background: linear-gradient(135deg, #8b5cf6, #6d28d9);
            color: white;
        }
        .metric-purple-dark {
            background: linear-gradient(135deg, #5b21b6, #4c1d95);
            color: white;
        }
        .metric-purple-alt {
            background: linear-gradient(135deg, #9333ea, #7c3aed);
            color: white;
        }
        .metric-card .card-title {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .metric-card .display-4 {
            font-weight: 600;
            margin-bottom: 0.5rem;
        }
        .metric-icon {
            font-size: 2.5rem;
            opacity: 0.2;
            position: absolute;
            right: 1rem;
            bottom: 1rem;
        }
        .card-header {
            background: transparent;
            border-bottom: 1px solid rgba(229, 231, 235, 0.5);
            padding: 1.25rem;
        }
        .card-header h5 {
            color: #4b5563;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin: 0;
        }
        .card-header h5 i {
            color: #6d28d9;
        }
        .btn-back {
            background-color: #f3e8ff;
            color: #6d28d9;
            border: none;
            padding: 0.5rem 1rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        .btn-back:hover {
            background-color: #e9d5ff;
            color: #5b21b6;
            transform: translateY(-1px);
        }
        .table {
            margin-bottom: 0;
        }
        .table th {
            background-color: #f8f9fa;
            font-weight: 600;
            color: #4b5563;
            border-bottom: 2px solid #e5e7eb;
        }
        .table td {
            vertical-align: middle;
            color: #6b7280;
        }
        .table-hover tbody tr:hover {
            background-color: #f3e8ff;
        }
        .growth-positive {
            color: #dcfce7;
        }
        .growth-negative {
            color: #fee2e2;
        }
        .list-group-item {
            border-left: none;
            border-right: none;
            padding: 1rem;
            transition: background-color 0.2s ease;
        }
        .list-group-item:hover {
            background-color: #f3e8ff;
        }
        .chart-container {
            position: relative;
            min-height: 300px;
            padding: 1rem;
        }
        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #6b7280;
        }
        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: #e9d5ff;
        }
    </style>
</head>
<body>

<%- include('../partials/admin-header', { title: 'Analytics Dashboard' }) %>

<div class="container-fluid px-4">
    <div class="gradient-header d-flex justify-content-between align-items-center">
        <div>
            <h2 class="m-0">Analytics Dashboard</h2>
            <p class="text-light mb-0 mt-2">Track your business performance and insights</p>
        </div>
        <a href="/admin" class="btn btn-back">
            <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
        </a>
    </div>

    <div class="row g-4 mb-4">
        <!-- Total Orders Card -->
        <div class="col-md-3">
            <div class="card metric-card metric-purple h-100">
                <div class="card-body position-relative">
                    <h6 class="card-title">Total Orders</h6>
                    <h2 class="display-4"><%= totalOrders.toLocaleString() %></h2>
                    <small class="text-white-50">Lifetime orders</small>
                    <i class="fas fa-shopping-cart metric-icon"></i>
                </div>
            </div>
        </div>
        <!-- Revenue Card -->
        <div class="col-md-3">
            <div class="card metric-card metric-purple-light h-100">
                <div class="card-body position-relative">
                    <h6 class="card-title">Total Revenue</h6>
                    <h2 class="display-4">$<%= totalRevenue.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></h2>
                    <% if (metrics && metrics.growthRate) { %>
                        <small>
                            <span class="<%= metrics.growthRate >= 0 ? 'growth-positive' : 'growth-negative' %>">
                                <i class="fas fa-<%= metrics.growthRate >= 0 ? 'arrow-up' : 'arrow-down' %> me-1"></i>
                                <%= Math.abs(metrics.growthRate) %>% from last month
                            </span>
                        </small>
                    <% } %>
                    <i class="fas fa-dollar-sign metric-icon"></i>
                </div>
            </div>
        </div>
        <!-- Best Seller Card -->
        <div class="col-md-3">
            <div class="card metric-card metric-purple-dark h-100">
                <div class="card-body position-relative">
                    <h6 class="card-title">Best Seller</h6>
                    <% if (mostSoldProduct && mostSoldProduct.name) { %>
                        <h4 class="mb-2"><%= mostSoldProduct.name %></h4>
                        <p class="mb-0">
                            <span class="d-block text-white-50"><%= mostSoldProduct.count %> units sold</span>
                            <span class="d-block mt-1">$<%= mostSoldProduct.revenue.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></span>
                        </p>
                    <% } else { %>
                        <p class="mb-0 text-white-50">No sales data available</p>
                    <% } %>
                    <i class="fas fa-crown metric-icon"></i>
                </div>
            </div>
        </div>
        <!-- Average Order Value Card -->
        <div class="col-md-3">
            <div class="card metric-card metric-purple-alt h-100">
                <div class="card-body position-relative">
                    <h6 class="card-title">Average Order Value</h6>
                    <h2 class="display-4">$<%= (metrics && metrics.averageOrderValue ? metrics.averageOrderValue.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}) : '0.00') %></h2>
                    <small class="text-white-50">Per order average</small>
                    <i class="fas fa-calculator metric-icon"></i>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4 mb-4">
        <!-- Sales Trend Chart -->
        <div class="col-md-8">
            <div class="card h-100">
                <div class="card-header">
                    <h5><i class="fas fa-chart-line"></i>Sales Trend</h5>
                </div>
                <div class="card-body chart-container">
                    <canvas id="salesTrendChart"></canvas>
                </div>
            </div>
        </div>
        <!-- Recent Users -->
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-header">
                    <h5><i class="fas fa-users"></i>Recent Users</h5>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        <% if (recentUsers && recentUsers.length > 0) { %>
                            <% recentUsers.forEach(user => { %>
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1" style="color: #4c1d95;"><%= user.name %></h6>
                                            <small class="text-muted"><%= user.email %></small>
                                        </div>
                                        <small class="text-muted">
                                            <%= new Date(user.createdAt).toLocaleDateString() %>
                                        </small>
                                    </div>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <div class="empty-state">
                                <i class="fas fa-users"></i>
                                <h5>No Recent Users</h5>
                                <p class="text-muted mb-0">New users will appear here</p>
                            </div>
                        <% } %>
                    </div>
                </div>
                <div class="card-footer bg-white text-center py-3">
                    <span class="text-muted">
                        <i class="fas fa-users me-1"></i>
                        Total Users: <%= (metrics && metrics.totalUsers ? metrics.totalUsers.toLocaleString() : '0') %>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4">
        <!-- Monthly Performance Table -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-table"></i>Monthly Performance</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Month</th>
                                    <th class="text-end">Orders</th>
                                    <th class="text-end">Revenue</th>
                                    <th class="text-end">Avg Order Value</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (monthlySales && monthlySales.length > 0) { %>
                                    <% [...monthlySales].reverse().forEach(m => { %>
                                        <tr>
                                            <td>
                                                <% const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 
                                                    'July', 'August', 'September', 'October', 'November', 'December']; %>
                                                <%= monthNames[m._id - 1] %>
                                            </td>
                                            <td class="text-end"><%= m.count.toLocaleString() %></td>
                                            <td class="text-end">$<%= m.total.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></td>
                                            <td class="text-end">$<%= m.avgOrderValue.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></td>
                                        </tr>
                                    <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="4">
                                            <div class="empty-state">
                                                <i class="fas fa-chart-bar"></i>
                                                <h5>No Monthly Data</h5>
                                                <p class="text-muted mb-0">Monthly performance data will appear here</p>
                                            </div>
                                        </td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <!-- Revenue Distribution Chart -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-chart-pie"></i>Revenue Distribution</h5>
                </div>
                <div class="card-body chart-container">
                    <canvas id="salesDistributionChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include('../partials/admin-footer') %>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    try {
        if (typeof Chart === 'undefined') {
            console.error('Chart.js is not loaded.');
            return;
        }
        const salesCanvas = document.getElementById('salesTrendChart');
        if (!salesCanvas) {
            console.error('Sales trend chart canvas not found');
            return;
        }
        let monthlySalesData = [];
        try {
            monthlySalesData = JSON.parse('<%- JSON.stringify(monthlySales || []) %>');
        } catch (e) {
            console.error('Failed to parse monthlySales:', e);
        }
        if (!Array.isArray(monthlySalesData) || monthlySalesData.length === 0) {
            // Show fallback message in canvas
            const ctx = salesCanvas.getContext('2d');
            ctx.clearRect(0, 0, salesCanvas.width, salesCanvas.height);
            ctx.font = '16px Arial, sans-serif';
            ctx.fillStyle = '#888';
            ctx.textAlign = 'center';
            ctx.fillText('No sales data available', salesCanvas.width / 2, salesCanvas.height / 2);
            return;
        }
        // Sort by month _id if not already sorted
        monthlySalesData.sort((a, b) => a._id - b._id);
        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        new Chart(salesCanvas.getContext('2d'), {
            type: 'line',
            data: {
                labels: monthlySalesData.map(m => monthNames[m._id - 1] || 'Unknown'),
                datasets: [
                    {
                        label: 'Revenue',
                        data: monthlySalesData.map(m => m.total || 0),
                        borderColor: 'rgb(109,40,217)', // purple
                        backgroundColor: 'rgba(109,40,217,0.1)',
                        tension: 0.4,
                        fill: true
                    },
                    {
                        label: 'Average Order Value',
                        data: monthlySalesData.map(m => m.avgOrderValue || 0),
                        borderColor: 'rgb(139,92,246)', // lighter purple
                        backgroundColor: 'rgba(139,92,246,0.1)',
                        tension: 0.4,
                        fill: true
                    }
                ]
            },
            options: {
                responsive: true,
                interaction: {
                    intersect: false,
                    mode: 'index'
                },
                plugins: {
                    title: { display: false },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.dataset.label + ': $' + context.raw.toLocaleString(undefined, {
                                    minimumFractionDigits: 2,
                                    maximumFractionDigits: 2
                                });
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: value => '$' + value.toLocaleString()
                        }
                    }
                }
            }
        });

        // Revenue Distribution Chart
        const distributionCtx = document.getElementById('salesDistributionChart');
        if (!distributionCtx) throw new Error('Distribution chart canvas not found');

        new Chart(distributionCtx.getContext('2d'), {
            type: 'doughnut',
            data: {
                labels: ['This Month', 'Previous Months'],
                datasets: [{
                    data: [
                        monthlySalesData[monthlySalesData.length - 1]?.total || 0,
                        monthlySalesData.slice(0, -1).reduce((sum, m) => sum + (m.total || 0), 0)
                    ],
                    backgroundColor: [
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const value = context.raw.toLocaleString(undefined, {
                                    minimumFractionDigits: 2,
                                    maximumFractionDigits: 2
                                });
                                return `${context.label}: $${value}`;
                            }
                        }
                    }
                }
            }
        });
    } catch (error) {
        console.error('Error initializing charts:', error);
        document.querySelectorAll('.card-body canvas').forEach(canvas => {
            canvas.insertAdjacentHTML('beforebegin', 
                '<div class="alert alert-danger">' +
                    '<i class="fas fa-exclamation-triangle me-2"></i>' +
                    'Error loading chart data. Please try refreshing the page.' +
                '</div>'
            );
            canvas.style.display = 'none';
        });
    }
});
</script>
</body>
</html>