<%- include('../partials/admin-header') %>

<div class="container-fluid px-4 py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">Edit Homepage Sections</h1>
        <button onclick="saveAllChanges()" class="btn btn-success">Save All Changes</button>
    </div>

    <!-- Debug Panel -->
    <div class="alert alert-info">
        <h5>Debug Information</h5>
        <div id="debug-info">
            <p>Open browser console (F12) to see detailed logs when saving.</p>
        </div>
    </div>

    <!-- Section Preview & Editor -->
    <div class="row">
        <!-- Preview Panel -->
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    Live Preview
                </div>
                <div class="card-body p-0">
                    <!-- Hero Section Preview -->
                    <div class="section-preview position-relative" id="hero-preview" onclick="showEditor('hero')">
                        <div class="hero-section" style="min-height: 400px; background: url('<%= heroSection?.image || 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b' %>') center/cover;">
                            <div class="hero-overlay"></div>
                            <div class="hero-content text-center text-white p-5">
                                <h1 class="display-4 fw-bold editable" data-field="title"><%= heroSection?.title || 'NO BULLSHIT' %></h1>
                                <p class="lead fw-bold editable" data-field="subtitle"><%= heroSection?.subtitle || 'FOOTWEAR BUILT FOR PERFORMANCE' %></p>
                                <p class="editable" data-field="description"><%= heroSection?.description || 'In and Out of the Gym' %></p>
                            </div>
                            <div class="edit-overlay">
                                <span class="edit-badge"><i class="fas fa-edit"></i> Click to Edit</span>
                            </div>
                        </div>
                    </div>

                    <!-- Featured Product Preview -->
                    <div class="section-preview position-relative" id="featured-preview" onclick="showEditor('featured')">
                        <div class="bg-white py-5">
                            <div class="container">
                                <div class="row align-items-center">
                                    <div class="col-md-6">
                                        <img src="<%= featuredSection?.image || 'https://images.unsplash.com/photo-1544966503-7cc5ac882d5f' %>" 
                                             alt="Featured Product" class="img-fluid rounded shadow">
                                    </div>
                                    <div class="col-md-6">
                                        <h2 class="h1 fw-bold editable" data-field="title"><%= featuredSection?.title || 'OUTWORK TRAINER' %></h2>
                                        <p class="lead editable" data-field="description">
                                            <%= featuredSection?.description || 'Built for the athlete who refuses to compromise. The Outwork Trainer delivers unmatched durability and performance for your toughest workouts.' %>
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <div class="edit-overlay">
                                <span class="edit-badge"><i class="fas fa-edit"></i> Click to Edit</span>
                            </div>
                        </div>
                    </div>

                    <!-- Promotional Banner Preview -->
                    <div class="section-preview position-relative" id="promo-preview" onclick="showEditor('promo')">
                        <div class="bg-dark text-white py-3">
                            <div class="container">
                                <div class="promo-scroll">
                                    <% 
                                    let promoMessages;
                                    try {
                                        promoMessages = promoSection?.description ? JSON.parse(promoSection.description) : [
                                            '🔥 FREE SHIPPING ON ORDERS OVER $75',
                                            '💪 BUILT FOR PERFORMANCE',
                                            '🚀 NEW ARRIVALS JUST DROPPED',
                                            '⚡ NO GIMMICKS, JUST GEAR THAT WORKS'
                                        ];
                                    } catch (e) {
                                        promoMessages = [
                                            '🔥 FREE SHIPPING ON ORDERS OVER $75',
                                            '💪 BUILT FOR PERFORMANCE',
                                            '🚀 NEW ARRIVALS JUST DROPPED',
                                            '⚡ NO GIMMICKS, JUST GEAR THAT WORKS'
                                        ];
                                    }
                                    %>
                                    <div class="d-flex gap-4">
                                        <% promoMessages.forEach(message => { %>
                                            <span class="promo-message editable" data-field="message"><%= message %></span>
                                        <% }) %>
                                    </div>
                                </div>
                            </div>
                            <div class="edit-overlay">
                                <span class="edit-badge"><i class="fas fa-edit"></i> Click to Edit</span>
                            </div>
                        </div>
                    </div>

                    <!-- Featured Products Preview -->
                    <div class="section-preview position-relative" id="featured-products-preview" onclick="showEditor('featured-products')">
                        <div class="bg-white py-5">
                            <div class="container">
                                <h2 class="text-center h2 fw-bold mb-4 editable" data-field="title"><%= featuredProductsSection?.title || 'FEATURED PRODUCTS' %></h2>
                                <div class="row g-4" id="featured-products-grid">
                                    <% 
                                    let featuredProducts;
                                    try {
                                        featuredProducts = featuredProductsSection?.products ? JSON.parse(featuredProductsSection.products) : [
                                            {img: 'https://images.unsplash.com/photo-1544966503-7cc5ac882d5f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80', name: 'OUTWORK TRAINER', price: '1490 DH', category: 'Men\'s Training'},
                                            {img: 'https://images.unsplash.com/photo-1549298916-b41d501d3772?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80', name: 'ALLDAY KNIT', price: '1290 DH', category: 'Women\'s Lifestyle'},
                                            {img: 'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80', name: 'GYM MESH', price: '1390 DH', category: 'Unisex Training'},
                                            {img: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80', name: 'PERFORMANCE TEE', price: '450 DH', category: 'Apparel'},
                                        ];
                                    } catch (e) {
                                        featuredProducts = [
                                            {img: 'https://images.unsplash.com/photo-1544966503-7cc5ac882d5f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80', name: 'OUTWORK TRAINER', price: '1490 DH', category: 'Men\'s Training'},
                                            {img: 'https://images.unsplash.com/photo-1549298916-b41d501d3772?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80', name: 'ALLDAY KNIT', price: '1290 DH', category: 'Women\'s Lifestyle'},
                                            {img: 'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80', name: 'GYM MESH', price: '1390 DH', category: 'Unisex Training'},
                                            {img: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80', name: 'PERFORMANCE TEE', price: '450 DH', category: 'Apparel'},
                                        ];
                                    }
                                    %>
                                    <% featuredProducts.forEach((product, index) => { %>
                                    <div class="col-md-3 col-sm-6" data-product-index="<%= index %>">
                                        <div class="card h-100 border-0 shadow-sm">
                                            <img src="<%= product.img %>" class="card-img-top" alt="<%= product.name %>" style="height: 250px; object-fit: cover;">
                                            <div class="card-body text-center">
                                                <p class="text-muted small mb-1"><%= product.category %></p>
                                                <h5 class="card-title fw-bold"><%= product.name %></h5>
                                                <p class="card-text fw-semibold"><%= product.price %></p>
                                            </div>
                                        </div>
                                    </div>
                                    <% }); %>
                                </div>
                            </div>
                            <div class="edit-overlay">
                                <span class="edit-badge"><i class="fas fa-edit"></i> Click to Edit</span>
                            </div>
                        </div>
                    </div>

                    <!-- Join the Community Preview -->
                    <div class="section-preview position-relative" id="community-preview" onclick="showEditor('community')">
                        <div class="bg-white py-5">
                            <div class="container">
                                <div class="text-center mb-4">
                                    <h2 class="h2 fw-bold mb-2 editable" data-field="title"><%= communitySection?.title || 'JOIN THE COMMUNITY' %></h2>
                                    <p class="text-muted editable" data-field="subtitle"><%= communitySection?.subtitle || 'Tag us @NOBULLPROJECT' %></p>
                                </div>
                                <div class="row g-2" id="community-posts-preview">
                                    <% 
                                    let communityPreviewPosts;
                                    try {
                                        communityPreviewPosts = communitySection?.posts ? JSON.parse(communitySection.posts) : [
                                            'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1534438327276-14e5300c3a48?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1544966503-7cc5ac882d5f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1549298916-b41d501d3772?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1534438327276-14e5300c3a48?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80'
                                        ];
                                    } catch (e) {
                                        communityPreviewPosts = [
                                            'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1534438327276-14e5300c3a48?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1544966503-7cc5ac882d5f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1549298916-b41d501d3772?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                            'https://images.unsplash.com/photo-1534438327276-14e5300c3a48?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80'
                                        ];
                                    }
                                    %>
                                    <% communityPreviewPosts.slice(0, 8).forEach(post => { %>
                                    <div class="col-3 col-md-1-5">
                                        <div class="position-relative overflow-hidden" style="aspect-ratio: 1;">
                                            <img src="<%= post %>" alt="Community Post" class="w-100 h-100" style="object-fit: cover;">
                                            <div class="position-absolute top-0 start-0 w-100 h-100 bg-dark bg-opacity-50 d-flex align-items-center justify-center opacity-0 hover-opacity-100 transition-opacity">
                                                <i class="fab fa-instagram text-white fs-4"></i>
                                            </div>
                                        </div>
                                    </div>
                                    <% }); %>
                                </div>
                            </div>
                            <div class="edit-overlay">
                                <span class="edit-badge"><i class="fas fa-edit"></i> Click to Edit</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Editor Panel -->
        <div class="col-lg-4">
            <div class="card shadow-sm">
                <div class="card-header bg-secondary text-white">
                    Section Editor
                </div>
                <div class="card-body">
                    <!-- Hero Section Editor -->
                    <div id="hero-editor" class="section-editor d-none">
                        <h3 class="h5 mb-3">Edit Hero Section</h3>
                        <form id="hero-form" class="needs-validation" novalidate>
                            <div class="mb-3">
                                <label class="form-label">Title</label>
                                <input type="text" class="form-control" name="title" value="<%= heroSection?.title || 'NO BULLSHIT' %>" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Subtitle</label>
                                <input type="text" class="form-control" name="subtitle" value="<%= heroSection?.subtitle || 'FOOTWEAR BUILT FOR PERFORMANCE' %>">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Description</label>
                                <input type="text" class="form-control" name="description" value="<%= heroSection?.description || 'In and Out of the Gym' %>">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Background Image</label>
                                <input type="file" class="form-control" name="image" accept="image/*">
                                <div class="form-text">Recommended size: 1920x1080px</div>
                            </div>
                        </form>
                    </div>

                    <!-- Featured Product Editor -->
                    <div id="featured-editor" class="section-editor d-none">
                        <h3 class="h5 mb-3">Edit Featured Product</h3>
                        <form id="featured-form" class="needs-validation" novalidate>
                            <div class="mb-3">
                                <label class="form-label">Product Title</label>
                                <input type="text" class="form-control" name="title" value="<%= featuredSection?.title || 'OUTWORK TRAINER' %>" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Description</label>
                                <textarea class="form-control" name="description" rows="3" required><%= featuredSection?.description || 'Built for the athlete who refuses to compromise. The Outwork Trainer delivers unmatched durability and performance for your toughest workouts.' %></textarea>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Product Image</label>
                                <input type="file" class="form-control" name="image" accept="image/*">
                                <div class="form-text">Recommended size: 800x800px</div>
                            </div>
                        </form>
                    </div>

                    <!-- Promotional Banner Editor -->
                    <div id="promo-editor" class="section-editor d-none">
                        <h3 class="h5 mb-3">Edit Promotional Messages</h3>
                        <form id="promo-form" class="needs-validation" novalidate>
                            <div class="row mb-3">
                                <div class="col-6">
                                    <label class="form-label">Promotion Start Date</label>
                                    <input type="datetime-local" class="form-control" name="promotionStartDate" 
                                           value="<%= promoSection?.promotionStartDate ? new Date(promoSection.promotionStartDate).toISOString().slice(0, 16) : new Date().toISOString().slice(0, 16) %>" required>
                                </div>
                                <div class="col-6">
                                    <label class="form-label">Promotion End Date</label>
                                    <input type="datetime-local" class="form-control" name="promotionEndDate" 
                                           value="<%= promoSection?.promotionEndDate ? new Date(promoSection.promotionEndDate).toISOString().slice(0, 16) : new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().slice(0, 16) %>" required>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Promotion Type</label>
                                <select class="form-control" name="promotionType">
                                    <option value="default" <%= promoSection?.promotionType === 'default' ? 'selected' : '' %>>Default</option>
                                    <option value="urgent" <%= promoSection?.promotionType === 'urgent' ? 'selected' : '' %>>Urgent</option>
                                    <option value="special" <%= promoSection?.promotionType === 'special' ? 'selected' : '' %>>Special</option>
                                    <option value="seasonal" <%= promoSection?.promotionType === 'seasonal' ? 'selected' : '' %>>Seasonal</option>
                                    <option value="flash" <%= promoSection?.promotionType === 'flash' ? 'selected' : '' %>>Flash</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="showCountdown" id="showCountdown" 
                                           <%= promoSection?.showCountdown ? 'checked' : '' %>>
                                    <label class="form-check-label" for="showCountdown">
                                        Show Countdown Timer
                                    </label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="isUrgent" id="isUrgent" 
                                           <%= promoSection?.isUrgent ? 'checked' : '' %>>
                                    <label class="form-check-label" for="isUrgent">
                                        Mark as Urgent
                                    </label>
                                </div>
                            </div>
                            <hr class="my-3">
                            <h6 class="mb-3">Promotional Messages</h6>
                            <div id="promo-messages">
                                <% promoMessages.forEach((message, index) => { %>
                                    <div class="mb-3 promo-message-group">
                                        <div class="d-flex gap-2">
                                            <input type="text" class="form-control" name="messages[]" value="<%= message %>" required>
                                            <button type="button" class="btn btn-danger btn-sm" onclick="removePromoMessage(this)">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>
                            <button type="button" class="btn btn-secondary btn-sm mb-3" onclick="addPromoMessage()">
                                <i class="fas fa-plus"></i> Add Message
                            </button>
                        </form>
                    </div>

                    <!-- Featured Products Editor -->
                    <div id="featured-products-editor" class="section-editor d-none">
                        <h3 class="h5 mb-3">Edit Featured Products</h3>
                        <form id="featured-products-form" class="needs-validation" novalidate>
                            <div class="mb-3">
                                <label class="form-label">Section Title</label>
                                <input type="text" class="form-control" name="title" value="<%= featuredProductsSection?.title || 'FEATURED PRODUCTS' %>" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Description</label>
                                <textarea class="form-control" name="description" rows="2" placeholder="Optional section description"><%= featuredProductsSection?.description || '' %></textarea>
                            </div>
                            
                            <hr class="my-4">
                            
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="mb-0">Featured Products</h6>
                                <button type="button" class="btn btn-primary btn-sm" onclick="addFeaturedProduct()">
                                    <i class="fas fa-plus"></i> Add Product
                                </button>
                            </div>
                            
                            <div id="featured-products-list">
                                <% featuredProducts.forEach((product, index) => { %>
                                    <div class="featured-product-item mb-4 p-3 border rounded" data-index="<%= index %>">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h6 class="mb-0">Product <%= index + 1 %></h6>
                                            <button type="button" class="btn btn-danger btn-sm" onclick="removeFeaturedProduct(this)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                        
                                        <div class="row g-2">
                                            <div class="col-12">
                                                <label class="form-label">Product Name</label>
                                                <input type="text" class="form-control" name="products[<%= index %>][name]" value="<%= product.name %>" required>
                                            </div>
                                            <div class="col-6">
                                                <label class="form-label">Price</label>
                                                <input type="text" class="form-control" name="products[<%= index %>][price]" value="<%= product.price %>" required>
                                            </div>
                                            <div class="col-6">
                                                <label class="form-label">Category</label>
                                                <input type="text" class="form-control" name="products[<%= index %>][category]" value="<%= product.category %>" required>
                                            </div>
                                            <div class="col-12">
                                                <label class="form-label">Product Image</label>
                                                <input type="file" class="form-control" name="products[<%= index %>][image]" accept="image/*">
                                                <input type="hidden" name="products[<%= index %>][currentImage]" value="<%= product.img %>">
                                                <div class="form-text">Current image: <a href="<%= product.img %>" target="_blank">View</a></div>
                                            </div>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                            
                            <div class="alert alert-warning">
                                <small><i class="fas fa-exclamation-triangle"></i> Changes will be applied when you click "Save All Changes" at the top of the page.</small>
                            </div>
                        </form>
                    </div>

                    <!-- Community Editor -->
                    <div id="community-editor" class="section-editor d-none">
                        <h3 class="h5 mb-3">Edit Community Section</h3>
                        <form id="community-form" class="needs-validation" novalidate>
                            <div class="mb-3">
                                <label class="form-label">Section Title</label>
                                <input type="text" class="form-control" name="title" value="<%= communitySection?.title || 'JOIN THE COMMUNITY' %>" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Subtitle</label>
                                <input type="text" class="form-control" name="subtitle" value="<%= communitySection?.subtitle || 'Tag us @NOBULLPROJECT' %>">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Instagram Handle</label>
                                <input type="text" class="form-control" name="instagram" value="<%= communitySection?.instagram || '@NOBULLPROJECT' %>" placeholder="@yourbrand">
                            </div>
                            
                            <hr class="my-3">
                            
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="mb-0">Community Posts</h6>
                                <button type="button" class="btn btn-primary btn-sm" onclick="addCommunityPost()">
                                    <i class="fas fa-plus"></i> Add Post
                                </button>
                            </div>
                            
                            <div id="community-posts-list">
                                <% 
                                let communityPosts;
                                try {
                                    communityPosts = communitySection?.posts ? JSON.parse(communitySection.posts) : [
                                        'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1534438327276-14e5300c3a48?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1544966503-7cc5ac882d5f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1549298916-b41d501d3772?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1534438327276-14e5300c3a48?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80'
                                    ];
                                } catch (e) {
                                    communityPosts = [
                                        'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1534438327276-14e5300c3a48?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1544966503-7cc5ac882d5f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1549298916-b41d501d3772?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
                                        'https://images.unsplash.com/photo-1534438327276-14e5300c3a48?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80'
                                    ];
                                }
                                %>
                                <% communityPosts.forEach((post, index) => { %>
                                    <div class="community-post-item mb-3 p-3 border rounded" data-index="<%= index %>">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h6 class="mb-0">Post <%= index + 1 %></h6>
                                            <button type="button" class="btn btn-danger btn-sm" onclick="removeCommunityPost(this)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                        
                                        <div class="row g-2">
                                            <div class="col-12">
                                                <label class="form-label">Image URL</label>
                                                <input type="text" class="form-control" name="posts[<%= index %>][url]" value="<%= post %>" placeholder="https://example.com/image.jpg" required>
                                            </div>
                                            <div class="col-12">
                                                <label class="form-label">Upload Image (Optional)</label>
                                                <input type="file" class="form-control" name="posts[<%= index %>][image]" accept="image/*">
                                                <div class="form-text">Upload a new image or use the URL above</div>
                                            </div>
                                            <div class="col-12">
                                                <div class="mt-2">
                                                    <img src="<%= post %>" alt="Post Preview" class="img-thumbnail" style="width: 100px; height: 100px; object-fit: cover;">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                            
                            <div class="alert alert-warning">
                                <small><i class="fas fa-exclamation-triangle"></i> Changes will be applied when you click "Save All Changes" at the top of the page.</small>
                            </div>
                        </form>
                    </div>

                    <div id="no-section-selected" class="text-center py-5">
                        <i class="fas fa-hand-pointer fa-3x mb-3 text-muted"></i>
                        <p class="text-muted">Click on any section in the preview to edit its content</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.section-preview {
    cursor: pointer;
    transition: all 0.3s ease;
}

.section-preview:hover .edit-overlay {
    opacity: 1;
}

.edit-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.edit-badge {
    background: white;
    color: #333;
    padding: 8px 16px;
    border-radius: 4px;
    font-weight: 500;
}

.hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.4);
}

.hero-content {
    position: relative;
    z-index: 1;
}

.promo-scroll {
    overflow: hidden;
    white-space: nowrap;
}

.promo-scroll .d-flex {
    animation: scroll 20s linear infinite;
}

.promo-message {
    padding: 0 20px;
}

@keyframes scroll {
    0% { transform: translateX(0); }
    100% { transform: translateX(-50%); }
}

.section-editor {
    transition: all 0.3s ease;
}

.col-md-1-5 {
    flex: 0 0 auto;
    width: 12.5%;
}

@media (max-width: 768px) {
    .col-md-1-5 {
        width: 25%;
    }
}

.hover-opacity-100:hover {
    opacity: 1 !important;
}

.transition-opacity {
    transition: opacity 0.3s ease;
}
</style>

<script>
let currentEditor = null;

// Helper function to handle fetch requests with better error reporting
async function safeFetch(url, options = {}) {
    try {
        console.log(`Making request to: ${url}`);
        console.log('Request options:', options);
        
        const response = await fetch(url, options);
        console.log(`Response status: ${response.status}`);
        console.log('Response headers:', Object.fromEntries(response.headers.entries()));
        
        if (!response.ok) {
            const errorText = await response.text();
            console.error(`HTTP Error ${response.status}:`, errorText);
            throw new Error(`HTTP ${response.status}: ${errorText}`);
        }
        
        return response;
    } catch (error) {
        console.error('Fetch error:', error);
        if (error.name === 'TypeError' && error.message.includes('fetch')) {
            throw new Error('Network error: Unable to connect to server. Please check if the server is running.');
        }
        throw error;
    }
}

function showEditor(section) {
    // Hide all editors
    document.querySelectorAll('.section-editor').forEach(editor => {
        editor.classList.add('d-none');
    });
    
    // Show selected editor
    const editor = document.getElementById(`${section}-editor`);
    editor.classList.remove('d-none');
    
    // Hide placeholder
    document.getElementById('no-section-selected').classList.add('d-none');
    
    currentEditor = section;
    
    // Highlight selected section
    document.querySelectorAll('.section-preview').forEach(preview => {
        preview.style.outline = 'none';
    });
    document.getElementById(`${section}-preview`).style.outline = '3px solid #0d6efd';
}

function addPromoMessage() {
    const container = document.getElementById('promo-messages');
    const div = document.createElement('div');
    div.className = 'mb-3 promo-message-group';
    div.innerHTML = `
        <div class="d-flex gap-2">
            <input type="text" class="form-control" name="messages[]" required>
            <button type="button" class="btn btn-danger btn-sm" onclick="removePromoMessage(this)">
                <i class="fas fa-times"></i>
            </button>
        </div>
    `;
    container.appendChild(div);
}

function removePromoMessage(button) {
    button.closest('.promo-message-group').remove();
}

function addFeaturedProduct() {
    const container = document.getElementById('featured-products-list');
    const items = container.querySelectorAll('.featured-product-item');
    const newIndex = items.length;
    
    const div = document.createElement('div');
    div.className = 'featured-product-item mb-4 p-3 border rounded';
    div.setAttribute('data-index', newIndex);
    div.innerHTML = `
        <div class="d-flex justify-content-between align-items-start mb-2">
            <h6 class="mb-0">Product ${newIndex + 1}</h6>
            <button type="button" class="btn btn-danger btn-sm" onclick="removeFeaturedProduct(this)">
                <i class="fas fa-trash"></i>
            </button>
        </div>
        
        <div class="row g-2">
            <div class="col-12">
                <label class="form-label">Product Name</label>
                <input type="text" class="form-control" name="products[${newIndex}][name]" required>
            </div>
            <div class="col-6">
                <label class="form-label">Price</label>
                <input type="text" class="form-control" name="products[${newIndex}][price]" placeholder="e.g., 1490 DH" required>
            </div>
            <div class="col-6">
                <label class="form-label">Category</label>
                <input type="text" class="form-control" name="products[${newIndex}][category]" placeholder="e.g., Men's Training" required>
            </div>
            <div class="col-12">
                <label class="form-label">Product Image</label>
                <input type="file" class="form-control" name="products[${newIndex}][image]" accept="image/*" required>
                <input type="hidden" name="products[${newIndex}][currentImage]" value="">
                <div class="form-text">Upload a product image (recommended: 400x400px)</div>
            </div>
        </div>
    `;
    container.appendChild(div);
    
    // Update preview
    updateFeaturedProductsPreview();
}

function removeFeaturedProduct(button) {
    const item = button.closest('.featured-product-item');
    item.remove();
    
    // Reindex remaining items
    const container = document.getElementById('featured-products-list');
    const items = container.querySelectorAll('.featured-product-item');
    
    items.forEach((item, index) => {
        item.setAttribute('data-index', index);
        item.querySelector('h6').textContent = `Product ${index + 1}`;
        
        // Update input names
        const inputs = item.querySelectorAll('input');
        inputs.forEach(input => {
            const name = input.getAttribute('name');
            if (name && name.includes('products[')) {
                const newName = name.replace(/products\[\d+\]/, `products[${index}]`);
                input.setAttribute('name', newName);
            }
        });
    });
    
    // Update preview
    updateFeaturedProductsPreview();
}

function updateFeaturedProductsPreview() {
    const container = document.getElementById('featured-products-list');
    const items = container.querySelectorAll('.featured-product-item');
    const previewGrid = document.getElementById('featured-products-grid');
    
    // Clear current preview
    previewGrid.innerHTML = '';
    
    items.forEach((item, index) => {
        const name = item.querySelector(`input[name="products[${index}][name]"]`).value || 'Product Name';
        const price = item.querySelector(`input[name="products[${index}][price]"]`).value || '0 DH';
        const category = item.querySelector(`input[name="products[${index}][category]"]`).value || 'Category';
        const currentImage = item.querySelector(`input[name="products[${index}][currentImage]"]`).value || 'https://via.placeholder.com/400x400?text=No+Image';
        
        const productDiv = document.createElement('div');
        productDiv.className = 'col-md-3 col-sm-6';
        productDiv.setAttribute('data-product-index', index);
        productDiv.innerHTML = `
            <div class="card h-100 border-0 shadow-sm">
                <img src="${currentImage}" class="card-img-top" alt="${name}" style="height: 250px; object-fit: cover;">
                <div class="card-body text-center">
                    <p class="text-muted small mb-1">${category}</p>
                    <h5 class="card-title fw-bold">${name}</h5>
                    <p class="card-text fw-semibold">${price}</p>
                </div>
            </div>
        `;
        previewGrid.appendChild(productDiv);
    });
}

function addCommunityPost() {
    const container = document.getElementById('community-posts-list');
    const items = container.querySelectorAll('.community-post-item');
    const newIndex = items.length;
    
    const div = document.createElement('div');
    div.className = 'community-post-item mb-3 p-3 border rounded';
    div.setAttribute('data-index', newIndex);
    div.innerHTML = `
        <div class="d-flex justify-content-between align-items-start mb-2">
            <h6 class="mb-0">Post ${newIndex + 1}</h6>
            <button type="button" class="btn btn-danger btn-sm" onclick="removeCommunityPost(this)">
                <i class="fas fa-trash"></i>
            </button>
        </div>
        
        <div class="row g-2">
            <div class="col-12">
                <label class="form-label">Image URL</label>
                <input type="text" class="form-control" name="posts[${newIndex}][url]" placeholder="https://example.com/image.jpg" required>
            </div>
            <div class="col-12">
                <label class="form-label">Upload Image (Optional)</label>
                <input type="file" class="form-control" name="posts[${newIndex}][image]" accept="image/*">
                <div class="form-text">Upload a new image or use the URL above</div>
            </div>
            <div class="col-12">
                <div class="mt-2">
                    <img src="https://via.placeholder.com/100x100?text=No+Image" alt="Post Preview" class="img-thumbnail" style="width: 100px; height: 100px; object-fit: cover;">
                </div>
            </div>
        </div>
    `;
    container.appendChild(div);
    
    // Update preview
    updateCommunityPreview();
}

function removeCommunityPost(button) {
    const item = button.closest('.community-post-item');
    item.remove();
    
    // Reindex remaining items
    const container = document.getElementById('community-posts-list');
    const items = container.querySelectorAll('.community-post-item');
    
    items.forEach((item, index) => {
        item.setAttribute('data-index', index);
        item.querySelector('h6').textContent = `Post ${index + 1}`;
        
        // Update input names
        const inputs = item.querySelectorAll('input');
        inputs.forEach(input => {
            const name = input.getAttribute('name');
            if (name && name.includes('posts[')) {
                const newName = name.replace(/posts\[\d+\]/, `posts[${index}]`);
                input.setAttribute('name', newName);
            }
        });
    });
    
    // Update preview
    updateCommunityPreview();
}

function updateCommunityPreview() {
    // This function could update the community preview in real-time
    // For now, we'll just log that it was called
    console.log('Community preview updated');
}

async function saveAllChanges() {
    const heroForm = document.getElementById('hero-form');
    const featuredForm = document.getElementById('featured-form');
    const promoForm = document.getElementById('promo-form');
    const featuredProductsForm = document.getElementById('featured-products-form');
    const communityForm = document.getElementById('community-form');
    
    const debugInfo = document.getElementById('debug-info');
    
    try {
        console.log('=== SAVING ALL CHANGES ===');
        debugInfo.innerHTML = '<p>Starting save process...</p>';
        
        // Test server connectivity first
        debugInfo.innerHTML += '<p>Testing server connectivity...</p>';
        try {
            const testResponse = await fetch('/admin/dashboard', { method: 'HEAD' });
            console.log('Server connectivity test:', testResponse.status);
            debugInfo.innerHTML += `<p>Server connectivity: ${testResponse.status}</p>`;
        } catch (connectError) {
            console.error('Server connectivity failed:', connectError);
            debugInfo.innerHTML += `<p>❌ Server connectivity failed: ${connectError.message}</p>`;
            throw new Error('Cannot connect to server: ' + connectError.message);
        }
        
        // Save hero section
        const heroData = new FormData(heroForm);
        console.log('Hero form data:');
        for (let [key, value] of heroData.entries()) {
            console.log(key, value);
        }
        
        debugInfo.innerHTML += '<p>Saving hero section...</p>';
        console.log('Sending hero section request...');
        const heroResponse = await safeFetch('/admin/dashboard/update-section/hero', {
            method: 'POST',
            body: heroData
        });
        
        const heroResult = await heroResponse.text();
        console.log('Hero response:', heroResult);
        
        debugInfo.innerHTML += '<p>✅ Hero section saved</p>';
        
        // Save featured section
        const featuredData = new FormData(featuredForm);
        console.log('Featured form data:');
        for (let [key, value] of featuredData.entries()) {
            console.log(key, value);
        }
        
        debugInfo.innerHTML += '<p>Saving featured section...</p>';
        console.log('Sending featured section request...');
        const featuredResponse = await safeFetch('/admin/dashboard/update-section/featured', {
            method: 'POST',
            body: featuredData
        });
        
        const featuredResult = await featuredResponse.text();
        console.log('Featured response:', featuredResult);
        
        debugInfo.innerHTML += '<p>✅ Featured section saved</p>';
        
        // Save promo section
        const promoData = new FormData(promoForm);
        
        // Convert messages array to JSON string for description field
        const messages = promoData.getAll('messages[]');
        promoData.delete('messages[]');
        promoData.append('description', JSON.stringify(messages));
        promoData.append('title', 'Promotional Banner');
        
        // Ensure required promotion fields are included and properly formatted
        let startDate = promoData.get('promotionStartDate');
        let endDate = promoData.get('promotionEndDate');
        
        if (!startDate || startDate === '') {
            startDate = new Date().toISOString();
            promoData.set('promotionStartDate', startDate);
        } else {
            // Convert datetime-local format to ISO string
            startDate = new Date(startDate).toISOString();
            promoData.set('promotionStartDate', startDate);
        }
        
        if (!endDate || endDate === '') {
            endDate = new Date(Date.now() + (30 * 24 * 60 * 60 * 1000)).toISOString();
            promoData.set('promotionEndDate', endDate);
        } else {
            // Convert datetime-local format to ISO string
            endDate = new Date(endDate).toISOString();
            promoData.set('promotionEndDate', endDate);
        }
        
        console.log('Processed promotion dates:', { startDate, endDate });
        
        console.log('Promo form data:');
        for (let [key, value] of promoData.entries()) {
            console.log(key, value);
        }
        
        debugInfo.innerHTML += '<p>Saving promo section...</p>';
        console.log('Sending promo section request...');
        const promoResponse = await safeFetch('/admin/dashboard/update-section/promotion', {
            method: 'POST',
            body: promoData
        });
        
        const promoResult = await promoResponse.text();
        console.log('Promo response:', promoResult);
        
        debugInfo.innerHTML += '<p>✅ Promo section saved</p>';
        
        // Save featured products section
        const featuredProductsData = new FormData(featuredProductsForm);
        
        // Remove all existing products-related form data to avoid conflicts
        const keysToDelete = [];
        for (let [key, value] of featuredProductsData.entries()) {
            if (key.startsWith('products[')) {
                keysToDelete.push(key);
            }
        }
        keysToDelete.forEach(key => featuredProductsData.delete(key));
        
        // Collect products data
        const productsData = [];
        const container = document.getElementById('featured-products-list');
        const items = container.querySelectorAll('.featured-product-item');
        
        items.forEach((item, index) => {
            const nameInput = item.querySelector(`input[name="products[${index}][name]"]`);
            const priceInput = item.querySelector(`input[name="products[${index}][price]"]`);
            const categoryInput = item.querySelector(`input[name="products[${index}][category]"]`);
            const currentImageInput = item.querySelector(`input[name="products[${index}][currentImage]"]`);
            const imageFileInput = item.querySelector(`input[name="products[${index}][image]"]`);
            
            if (nameInput && priceInput && categoryInput) {
                const name = nameInput.value.trim();
                const price = priceInput.value.trim();
                const category = categoryInput.value.trim();
                const currentImage = currentImageInput ? currentImageInput.value : '';
                const imageFile = imageFileInput ? imageFileInput.files[0] : null;
                
                if (name && name.length > 0 && category && category.length > 0) { // Ensure name and category are not empty
                    const productData = {
                        name: name,
                        price: price || '0 DH',
                        category: category,
                        img: currentImage || 'https://via.placeholder.com/400x400?text=No+Image'
                    };
                    
                    console.log(`Adding product ${index}:`, productData);
                    productsData.push(productData);
                    
                    // Add image file if uploaded
                    if (imageFile) {
                        featuredProductsData.append(`productImage_${index}`, imageFile);
                    }
                } else {
                    console.log(`Skipping invalid product ${index}:`, { name, price, category });
                }
            }
        });
        
        // Add products data as JSON string
        const productsJsonString = JSON.stringify(productsData);
        featuredProductsData.append('products', productsJsonString);
        featuredProductsData.append('type', 'product-showcase');
        
        console.log('Featured Products form data:');
        for (let [key, value] of featuredProductsData.entries()) {
            if (key === 'products') {
                console.log(key, 'JSON string length:', value.length);
                console.log('Products JSON preview:', value.substring(0, 200) + '...');
            } else {
                console.log(key, value);
            }
        }
        console.log('Products data array:', productsData);
        console.log('Products JSON string:', productsJsonString);
        
        debugInfo.innerHTML += '<p>Saving featured products section...</p>';
        console.log('Sending featured products section request...');
        const featuredProductsResponse = await safeFetch('/admin/dashboard/update-section/product-showcase', {
            method: 'POST',
            body: featuredProductsData
        });
        
        const featuredProductsResult = await featuredProductsResponse.text();
        console.log('Featured Products response:', featuredProductsResult);
        
        debugInfo.innerHTML += '<p>✅ Featured products section saved</p>';
        
        // Save community section
        const communityData = new FormData(communityForm);
        
        // Remove all existing posts-related form data to avoid conflicts
        const communityKeysToDelete = [];
        for (let [key, value] of communityData.entries()) {
            if (key.startsWith('posts[')) {
                communityKeysToDelete.push(key);
            }
        }
        communityKeysToDelete.forEach(key => communityData.delete(key));
        
        // Collect community posts data
        const postsData = [];
        const communityContainer = document.getElementById('community-posts-list');
        const communityItems = communityContainer.querySelectorAll('.community-post-item');
        
        communityItems.forEach((item, index) => {
            const urlInput = item.querySelector(`input[name="posts[${index}][url]"]`);
            const imageFileInput = item.querySelector(`input[name="posts[${index}][image]"]`);
            
            if (urlInput) {
                const url = urlInput.value.trim();
                const imageFile = imageFileInput ? imageFileInput.files[0] : null;
                
                console.log(`Processing community post ${index}:`, { url, hasImageFile: !!imageFile });
                
                if (url && url.length > 0) {
                    postsData.push(url);
                    
                    // Add image file if uploaded
                    if (imageFile) {
                        communityData.append(`postImage_${index}`, imageFile);
                        console.log(`Added image file for post ${index}:`, imageFile.name);
                    }
                } else {
                    console.log(`Skipping invalid community post ${index}:`, { url });
                }
            } else {
                console.log(`No URL input found for post ${index}`);
            }
        });
        
        // Add posts data as JSON string
        const postsJsonString = JSON.stringify(postsData);
        communityData.append('posts', postsJsonString);
        communityData.append('type', 'community');
        
        console.log('Community form data:');
        for (let [key, value] of communityData.entries()) {
            if (key === 'posts') {
                console.log(key, 'JSON string length:', value.length);
                console.log('Posts JSON preview:', value.substring(0, 200) + '...');
            } else {
                console.log(key, value);
            }
        }
        console.log('Posts data array:', postsData);
        console.log('Posts JSON string:', postsJsonString);
        
        debugInfo.innerHTML += '<p>Saving community section...</p>';
        console.log('Sending community section request...');
        const communityResponse = await safeFetch('/admin/dashboard/update-section/community', {
            method: 'POST',
            body: communityData
        });
        
        const communityResult = await communityResponse.text();
        console.log('Community response:', communityResult);
        
        debugInfo.innerHTML += '<p>✅ Community section saved</p>';
        
        console.log('All sections saved successfully');
        debugInfo.innerHTML += '<p><strong>✅ All changes saved successfully!</strong></p>';
        alert('All changes saved successfully!');
        
        setTimeout(() => {
            location.reload();
        }, 1000);
        
    } catch (error) {
        console.error('Error saving changes:', error);
        debugInfo.innerHTML += `<p><strong>❌ Error: ${error.message}</strong></p>`;
        alert('Error saving changes: ' + error.message);
    }
}

// Initialize tooltips
document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(tooltip => {
    new bootstrap.Tooltip(tooltip);
});

// Add event listeners for real-time preview updates
document.addEventListener('DOMContentLoaded', function() {
    // Listen for changes in featured products form
    const featuredProductsContainer = document.getElementById('featured-products-list');
    if (featuredProductsContainer) {
        featuredProductsContainer.addEventListener('input', function(e) {
            if (e.target.matches('input[type="text"]')) {
                updateFeaturedProductsPreview();
            }
        });
        
        featuredProductsContainer.addEventListener('change', function(e) {
            if (e.target.matches('input[type="file"]')) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const index = e.target.closest('.featured-product-item').getAttribute('data-index');
                        const hiddenInput = e.target.closest('.featured-product-item').querySelector(`input[name="products[${index}][currentImage]"]`);
                        hiddenInput.value = e.result;
                        updateFeaturedProductsPreview();
                    }.bind(e.target);
                    reader.readAsDataURL(file);
                }
            }
        });
    }
});
</script>

<%- include('../partials/admin-footer') %>