<%- include('partials/header') %>

<style>
:root {
    --bs-white: #fff;
    --bs-gray-100: #f8f9fa;
    --bs-gray-200: #e9ecef;
    --bs-gray-300: #dee2e6;
    --bs-gray-400: #ced4da;
    --bs-gray-500: #adb5bd;
    --bs-gray-600: #6c757d;
    --bs-gray-700: #495057;
    --bs-gray-800: #343a40;
    --bs-gray-900: #212529;
    --bs-dark: #212529;
    --bs-primary: #0d6efd;
    --bs-primary-dark: #0a58ca;
    --bs-danger: #dc3545;
}

.change-password-container {
    max-width: 600px;
    margin: 2rem auto;
    padding: 0 1rem;
}

.change-password-section {
    background: var(--bs-white);
    border-radius: 10px;
    padding: 2rem;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.change-password-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--bs-gray-200);
}

.change-password-title {
    font-size: 1.5rem;
    color: var(--bs-dark);
    margin: 0;
}

.form-group {
    margin-bottom: 1.5rem;
}

.form-label {
    font-weight: 600;
    color: var(--bs-gray-800);
    margin-bottom: 0.5rem;
}

.form-control {
    border: 1px solid var(--bs-gray-300);
    border-radius: 5px;
    padding: 0.75rem;
    width: 100%;
    transition: border-color 0.3s ease;
    color: var(--bs-gray-900);
    background-color: var(--bs-white);
}

.form-control:focus {
    border-color: var(--bs-primary);
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.btn-submit {
    background: var(--bs-primary);
    color: var(--bs-white);
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.btn-submit:hover {
    background: var(--bs-primary-dark);
}

.btn-cancel {
    background: var(--bs-gray-600);
    color: var(--bs-white);
    text-decoration: none;
    padding: 0.75rem 1.5rem;
    border-radius: 5px;
    margin-left: 1rem;
    transition: background-color 0.3s ease;
}

.btn-cancel:hover {
    background: var(--bs-gray-700);
    color: var(--bs-white);
}

.invalid-feedback {
    display: none;
    color: var(--bs-danger);
    font-size: 0.875em;
    margin-top: 0.25rem;
}

.form-control.is-invalid {
    border-color: var(--bs-danger);
}

.form-control.is-invalid ~ .invalid-feedback {
    display: block;
}

@media (max-width: 768px) {
    .change-password-container {
        padding: 1rem;
    }
    
    .change-password-section {
        padding: 1.5rem;
    }
}
</style>

<div class="change-password-container">
    <div class="change-password-section">
        <div class="change-password-header">
            <h3 class="change-password-title">Change Password</h3>
            <a href="/profile" class="btn-cancel">Back</a>
        </div>

        <% if (messages.success) { %>
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <%= messages.success %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <% } %>

        <% if (messages.error) { %>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <%= messages.error %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <% } %>

        <form action="/profile/change-password" method="POST" id="changePasswordForm" novalidate>
            <div class="form-group">
                <label class="form-label" for="currentPassword">Current Password</label>
                <input type="password" 
                       class="form-control" 
                       id="currentPassword" 
                       name="currentPassword" 
                       required>
                <div class="invalid-feedback">Please enter your current password</div>
            </div>

            <div class="form-group">
                <label class="form-label" for="newPassword">New Password</label>
                <input type="password" 
                       class="form-control" 
                       id="newPassword" 
                       name="newPassword" 
                       required 
                       minlength="6">
                <div class="invalid-feedback">Password must be at least 6 characters long</div>
            </div>

            <div class="form-group">
                <label class="form-label" for="confirmPassword">Confirm New Password</label>
                <input type="password" 
                       class="form-control" 
                       id="confirmPassword" 
                       name="confirmPassword" 
                       required>
                <div class="invalid-feedback">Passwords do not match</div>
            </div>

            <div class="text-end">
                <button type="submit" class="btn-submit">Change Password</button>
                <a href="/profile" class="btn-cancel">Cancel</a>
            </div>
        </form>
    </div>
</div>

<script>
const form = document.getElementById('changePasswordForm');
const newPassword = document.getElementById('newPassword');
const confirmPassword = document.getElementById('confirmPassword');

form.addEventListener('submit', function(e) {
    let isValid = true;
    form.classList.remove('was-validated');

    // Check current password
    const currentPassword = document.getElementById('currentPassword');
    if (!currentPassword.value) {
        isValid = false;
        currentPassword.classList.add('is-invalid');
    }

    // Check new password length
    if (newPassword.value.length < 6) {
        isValid = false;
        newPassword.classList.add('is-invalid');
    }

    // Check password match
    if (newPassword.value !== confirmPassword.value) {
        isValid = false;
        confirmPassword.classList.add('is-invalid');
    }

    if (!isValid) {
        e.preventDefault();
        form.classList.add('was-validated');
    }
});

// Real-time password match validation
confirmPassword.addEventListener('input', function() {
    if (newPassword.value !== this.value) {
        this.setCustomValidity('Passwords do not match');
        this.classList.add('is-invalid');
    } else {
        this.setCustomValidity('');
        this.classList.remove('is-invalid');
    }
});

// Real-time new password validation
newPassword.addEventListener('input', function() {
    if (this.value.length < 6) {
        this.setCustomValidity('Password must be at least 6 characters long');
        this.classList.add('is-invalid');
    } else {
        this.setCustomValidity('');
        this.classList.remove('is-invalid');
        // Recheck confirm password
        if (confirmPassword.value) {
            confirmPassword.dispatchEvent(new Event('input'));
        }
    }
});
</script>

<%- include('partials/footer') %>
